name: Build executables

on:
  push:
    tags:
      - 'v*'
    branches:
      - dem2


jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: actions/setup-python@v3
      name: Install Python
      with:
        python-version: '3.7'
    - name: Install dependencies (Linux)
      run: |
        python -m pip install --upgrade pip
        sudo apt-add-repository ppa:ubuntugis/ubuntugis-unstable
        sudo apt-get update
        sudo apt-get install gdal-bin libgdal-dev
        python -m pip install GDAL numpy pyinstaller wheel
        export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      if: ${{ runner.os == 'Linux' }}

    - name: Install conda (Windows)
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.7
        channels: conda-forge
        channel-priority: strict
      if: ${{ runner.os == 'Windows' }}
    - name: Install conda dependencies (Windows)
      run: |
        conda install gdal pyinstaller
      if: ${{ runner.os == 'Windows' }}

    - name: Install CTB (Linux)
      run: |
        mkdir cesium-terrain-builder/build
        cmake -DCMAKE_BUILD_TYPE=Release -S cesium-terrain-builder -B cesium-terrain-builder/build && cmake --build cesium-terrain-builder/build 
      if: ${{ runner.os == 'Linux' }}
    
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Install CTB (Windows)
      run: |
        mkdir cesium-terrain-builder\build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -G "NMake Makefiles" -S cesium-terrain-builder -B cesium-terrain-builder\build && cmake --build cesium-terrain-builder\build
      if: ${{ runner.os == 'Windows' }}
    
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3

    - name: Build distribution (Linux)
      run: |
        pyinstaller --clean --onedir gdal_extras/app.py --add-data "cesium-terrain-builder/build/tools/ctb-tile:." --add-data "$PROJ_LIB:proj" --add-binary "cesium-terrain-builder/build/src/libctb.so:."
      if: ${{ runner.os == 'Linux' }}
    
    - name: Build distribution (Windows)
      run: |
        pyinstaller --clean --onedir gdal_extras/app.py --add-data "cesium-terrain-builder\build\tools\ctb-tile.exe;." --add-data "%PROJ_LIB%;proj" --add-binary "cesium-terrain-builder\build\src\ctb.dll;."
      if: ${{ runner.os == 'Windows' }}

    - name: Upload artifact (Linux)
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: dist/app
      if: ${{ runner.os == 'Linux' }}

    - name: Upload artifact (Windows)
      uses: actions/upload-artifact@v2
      with:
        name: app.exe
        path: dist\app.exe
      if: ${{ runner.os == 'Windows' }}
